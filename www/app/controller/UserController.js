/*
 * File: app/controller/UserController.js
 *
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.2.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Roadpech.controller.UserController', {
    extend: 'Ext.app.Controller',

    config: {
        views: [
            'Login'
        ],

        routes: {
            'login': 'showLogin'
        },

        refs: {
            loginView: {
                autoCreate: true,
                selector: 'loginView',
                xtype: 'loginView'
            },
            mainView: {
                autoCreate: true,
                selector: 'mainView',
                xtype: 'mainView'
            }
        },

        control: {
            "loginView": {
                signInCommand: 'onSignInCommand'
            }
        }
    },

    onSignInCommand: function(item, username, password) {
        console.log(username, password);
        var me = this,
            loginView = me.getLoginView();

        if (username.length === 0 || password.length === 0) {
            Ext.Msg.alert('Error', 'Please enter a username and a password');
            return;
        }

        loginView.setMasked({
            xtype: 'loadmask',
            message: 'Signing In...'
        });


        var task;
        if (username=="admin" && password=="admin")
        task = Ext.create('Ext.util.DelayedTask', function () {
            me.signInSuccess(); 
        });
        else
        task = Ext.create('Ext.util.DelayedTask', function () {
            me.signInFailure("Invalid Username or Password"); 
        });

        task.delay(500);


        /*

        Ext.data.JsonP.request({
        url: 'http://roadpechrest.ap01.aws.af.cm/login?callback=callback',
        method : "POST",
        params: {
        username : "dfd",
        password: "dfd"
        },
        callback: function(successful, data ) {
        console.log(successful, data);        
        }
        });

        Ext.Ajax.request({
        url: 'http://roadpechrest.ap01.aws.af.cm/login',
        params: {
        username : username,
        password: password
        },
        method: 'POST',
        success: function (response) {

        var loginResponse = Ext.JSON.decode(response.responseText);
        if (loginResponse.success === "true") {
        me.sessionToken = loginResponse.sessionToken;
        me.signInSuccess(); 
        } else {
        me.signInFailure(loginResponse.message);
        }
        },
        failure: function (response) {
        me.sessionToken = null;
        me.signInFailure('Login failed. Please try again later.');
        }
        });
        */
    },

    signInFailure: function(msg) {
        var loginView = this.getLoginView();
        loginView.setMasked(false);
        Ext.Msg.alert('Error', msg);
    },

    signInSuccess: function() {
        console.log('signed In Success');
        var loginView = this.getLoginView();
        mainView = this.getMainView();
        loginView.setMasked(false);
        this.redirectTo('map')
        //Ext.Viewport.setActiveItem(mainView);
    },

    showLogin: function() {
        console.log('login route');
        Ext.Viewport.setActiveItem(this.getLoginView());
    }

});